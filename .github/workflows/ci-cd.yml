name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_sync:
        description: "Force sync design tokens from Figma"
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: "18"

jobs:
  # Job 1: Sync Design Tokens (Optional)
  sync-design-tokens:
    name: 🔄 Sync Design Tokens
    runs-on: ubuntu-latest
    if: github.event.inputs.force_sync == 'true' || github.event_name == 'schedule'

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🎨 Sync Figma Tokens
        env:
          FIGMA_API_TOKEN: ${{ secrets.FIGMA_API_TOKEN }}
          FIGMA_FILE_KEY: ${{ secrets.FIGMA_FILE_KEY }}
        run: |
          if [ -z "$FIGMA_API_TOKEN" ] || [ -z "$FIGMA_FILE_KEY" ]; then
            echo "⚠️  Figma API secrets not configured - skipping sync"
            exit 0
          fi
          echo "🔗 Syncing design tokens from Figma..."
          npm run sync-tokens

      - name: 🔍 Check for Token Changes
        id: token-changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Check if there are any changes to token files
          if git diff --quiet src/styles/_tokens.scss tokens/tokens.json tokens/figma-tokens.json; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            echo "📋 No token changes detected"
          else
            echo "no_changes=false" >> $GITHUB_OUTPUT
            echo "✨ Token changes detected"
            
            # Show what changed
            echo "📊 Changes summary:"
            git diff --stat src/styles/_tokens.scss tokens/tokens.json tokens/figma-tokens.json || echo "No differences found"
          fi

      - name: 🔀 Commit Token Changes
        if: steps.token-changes.outputs.no_changes == 'false'
        run: |
          git add src/styles/_tokens.scss tokens/tokens.json tokens/figma-tokens.json
          git commit -m "🎨 Update design tokens from Figma

          - Synced tokens from Figma design system
          - Updated only changed token values
          - Preserved existing token names and structure
          - Generated comparison files for future syncs

          Automated sync from Figma design system [skip ci]"

          git push origin ${{ github.ref }}

      - name: 📊 Generate Token Summary
        if: steps.token-changes.outputs.no_changes == 'false'
        run: |
          echo "📊 Token sync completed successfully!"
          echo "🎯 Changes committed to ${{ github.ref }} branch"
          echo " Figma tokens are now live in your design system"

      - name: 📢 Notify on Success
        if: steps.token-changes.outputs.no_changes == 'false'
        run: |
          echo "🎉 Design token sync completed successfully!"
          echo "📦 Only changed token values were updated"
          echo "🏆 Existing structure and names preserved"

      - name: 📢 Notify No Changes
        if: steps.token-changes.outputs.no_changes == 'true'
        run: |
          echo " Design tokens are already up to date"
          echo "🏆 No changes needed - everything matches"

  # Job 2: Build Library
  build:
    name: 🏗️ Build Library
    runs-on: ubuntu-latest
    needs: [sync-design-tokens]
    if: always() && (needs.sync-design-tokens.result == 'success' || needs.sync-design-tokens.result == 'skipped')

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Library
        run: npm run build

      - name: 📚 Build Storybook
        run: npm run build-storybook

      - name: 📊 Build Summary
        run: |
          echo "🏗️  Build completed successfully!"
          echo "📦 Library built to dist/ directory"
          echo "📚 Storybook built to storybook-static/ directory"
          echo " Ready for manual deployment"
