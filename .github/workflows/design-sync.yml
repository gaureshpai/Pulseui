name: Design System CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Sync design tokens daily at 9 AM UTC
    - cron: "0 9 * * *"

jobs:
  # Job 1: Sync Figma Design Tokens
  sync-design-tokens:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Sync Figma tokens
        env:
          FIGMA_API_TOKEN: ${{ secrets.FIGMA_API_TOKEN }}
          FIGMA_FILE_KEY: ${{ secrets.FIGMA_FILE_KEY }}
        run: |
          if [ -z "$FIGMA_API_TOKEN" ] || [ -z "$FIGMA_FILE_KEY" ]; then
            echo "‚ö†Ô∏è  Figma API secrets not configured - skipping sync"
            echo "üìã To enable Figma sync, add FIGMA_API_TOKEN and FIGMA_FILE_KEY to repository secrets"
            echo "‚úÖ Continuing without Figma sync"
          else
            echo "üîó Figma secrets found - running sync"
            npm run sync-tokens
          fi

      - name: Commit token changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/styles/tokens/
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-sync design tokens from Figma"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  # Job 2: Build & Test
  build-and-test:
    runs-on: ubuntu-latest
    needs: sync-design-tokens
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting (non-blocking)
        continue-on-error: true
        run: |
          echo "üîç Running ESLint (warnings only)..."
          npm run lint || echo "‚ö†Ô∏è Linting issues found - continuing anyway"

      - name: Run tests
        run: npm test

      - name: Build Storybook
        run: npm run build-storybook

      - name: Upload Storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/

  # Job 3: Deploy to Vercel
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: "--prod"
