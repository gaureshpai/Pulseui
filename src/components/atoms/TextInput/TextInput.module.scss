@import "../../../styles/_tokens.scss";
@import "../../../styles/_mixins.scss";

.root {
  @include flex-column;
  gap: var(--spacing-xs);
  width: 100%;
  font-family: var(--font-family);
}

.label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary) !important;
  line-height: var(--line-height-sm);
  margin: 0;
  cursor: pointer;
}

/* Force theme-aware colors with higher specificity */
.dark .label,
.light .label,
body.dark .label,
body.light .label {
  color: var(--color-text-primary) !important;
}

.required {
  color: var(--color-error) !important;
  margin-left: var(--spacing-xs);
}

/* Force theme-aware colors for required indicator */
.dark .required,
.light .required,
body.dark .required,
body.light .required {
  color: var(--color-error) !important;
}

.input {
  width: 100%;
}

.footer {
  display: flex;
  align-items: flex-start;
  min-height: var(--line-height-xs);
}

.caption {
  font-size: var(--font-size-xs);
  color: var(--color-text-muted) !important;
  line-height: var(--line-height-xs);
  margin: 0;
}

/* Force theme-aware colors for caption */
.dark .caption,
.light .caption,
body.dark .caption,
body.light .caption {
  color: var(--color-text-muted) !important;
}

.errorMessage {
  display: flex;
  align-items: center;

  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-bold);
  color: var(--color-error) !important;

  margin: 0;
}

/* Force theme-aware colors for error message */
.dark .errorMessage,
.light .errorMessage,
body.dark .errorMessage,
body.light .errorMessage {
  color: var(--color-error) !important;
}

.errorIcon {
  flex-shrink: 0;
}

// Error state
.root.error {
  .input {
    @include error-state;
  }
}

// Disabled state
.root.disabled {
  @include disabled;

  .label {
    cursor: not-allowed;
  }
}
