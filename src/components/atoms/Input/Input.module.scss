@import "../../../styles/_tokens.scss";

.inputWrapper {
  position: relative;
  display: inline-flex;
  align-items: center;
  width: 100%;
}

.input {
  width: 100%;
  border: none;
  outline: none;
  background: transparent;
  font-family: var(--font-family);
  transition: all 0.2s ease-in-out;
  border-radius: var(--radius-md);

  // Remove default browser styles
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  &[type="number"] {
    -moz-appearance: textfield;
  }

  // Placeholder styles
  &::placeholder {
    color: var(--color-gray-5);
    opacity: 1;
  }

  // Focus outline
  &:focus {
    outline: none;
  }
}

// Variant styles
.variant-default {
  border: 1px solid var(--color-gray-3);
  background-color: var(--color-white);
  color: var(--color-gray-9);

  &:hover:not(.disabled) {
    border-color: var(--color-gray-4);
  }

  &:focus {
    border-color: var(--color-blue-6);
    box-shadow: 0 0 0 2px var(--color-blue-1);
  }

  &.error {
    border-color: var(--color-red-6);

    &:focus {
      border-color: var(--color-red-5);
      box-shadow: 0 0 0 2px var(--color-red-1);
    }
  }
}

.variant-filled {
  border: 1px solid transparent;
  background-color: var(--color-gray-1);
  color: var(--color-gray-9);

  &:hover:not(.disabled) {
    background-color: var(--color-gray-2);
  }

  &:focus {
    background-color: var(--color-white);
    border-color: var(--color-blue-6);
    box-shadow: 0 0 0 2px var(--color-blue-1);
  }

  &.error {
    background-color: var(--color-red-1);
    border-color: var(--color-red-5);

    &:focus {
      background-color: var(--color-white);
      border-color: var(--color-red-5);
      box-shadow: 0 0 0 2px var(--color-red-1);
    }
  }
}

.variant-unstyled {
  border: none;
  background: transparent;
  color: var(--color-gray-9);

  &:hover:not(.disabled) {
    background-color: var(--color-gray-1);
  }

  &:focus {
    background-color: var(--color-gray-1);
  }

  &.error {
    color: var(--color-red-6);

    &:focus {
      background-color: var(--color-red-1);
    }
  }
}

// Size variants
.size-sm {
  padding: var(--spacing-xs) var(--spacing-sm);
  padding-left: var(--spacing-sm);
  padding-right: var(--spacing-sm);
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  min-height: 32px;
}

.size-md {
  padding: var(--spacing-sm) var(--spacing-md);
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
  font-size: var(--font-size-md);
  line-height: var(--line-height-md);
  min-height: 40px;
}

.size-lg {
  padding: var(--spacing-md) var(--spacing-lg);
  padding-left: var(--spacing-lg);
  padding-right: var(--spacing-lg);
  font-size: var(--font-size-lg);
  line-height: var(--line-height-lg);
  min-height: 48px;
}

.size-xl {
  padding: var(--spacing-lg) var(--spacing-xl);
  padding-left: var(--spacing-xl);
  padding-right: var(--spacing-xl);
  font-size: var(--font-size-xl);
  line-height: var(--line-height-xl);
  min-height: 56px;
}

// State styles
.state-enabled {
  // Default state - no additional styles
}

.state-focus {
  // Focus state is handled by :focus pseudo-class
}

.state-typing {
  // Typing state - no additional styles needed
}

.state-filled {
  // Filled state - no additional styles needed
}

.state-disabled {
  opacity: var(--opacity-50);
  cursor: not-allowed;
  pointer-events: none;

  &.variant-default {
    background-color: var(--color-gray-1);
    border-color: var(--color-gray-2);
    color: var(--color-gray-5);
  }

  &.variant-filled {
    background-color: var(--color-gray-1);
    color: var(--color-gray-5);
  }

  &.variant-unstyled {
    color: var(--color-gray-5);
  }
}

// Error state
.error {
  &.variant-default {
    border-color: var(--color-red-5);
    color: var(--color-red-8);

    &::placeholder {
      color: var(--color-red-6);
    }
  }

  &.variant-filled {
    background-color: var(--color-red-1);
    border-color: var(--color-red-5);
    color: var(--color-red-8);

    &::placeholder {
      color: var(--color-red-6);
    }
  }

  &.variant-unstyled {
    color: var(--color-red-8);

    &::placeholder {
      color: var(--color-red-6);
    }
  }
}

// Disabled state
.disabled {
  opacity: var(--opacity-50);
  cursor: not-allowed;
  pointer-events: none;
}

// Readonly state
.readonly {
  cursor: default;

  &.variant-default {
    background-color: var(--color-gray-1);
  }

  &.variant-filled {
    background-color: var(--color-gray-2);
  }
}

// Icon styles
.infoIcon,
.dropdownIcon {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  color: var(--color-gray-5);
  transition: color 0.2s ease-in-out;
}

.infoIcon {
  left: var(--spacing-icon);
}

.dropdownIcon {
  right: var(--spacing-icon);
}

// Adjust padding when icons are present
.inputWrapper {
  &:has(.infoIcon) .input {
    padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-md));
  }

  &:has(.dropdownIcon) .input {
    padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-md));
  }

  &:has(.infoIcon):has(.dropdownIcon) .input {
    padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-md));
    padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-md));
  }
}

// Size-specific icon padding adjustments
.inputWrapper:has(.infoIcon) .input.size-sm {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-sm));
}

.inputWrapper:has(.dropdownIcon) .input.size-sm {
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-sm));
}

.inputWrapper:has(.infoIcon):has(.dropdownIcon) .input.size-sm {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-sm));
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-sm));
}

.inputWrapper:has(.infoIcon) .input.size-md {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-md));
}

.inputWrapper:has(.dropdownIcon) .input.size-md {
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-md));
}

.inputWrapper:has(.infoIcon):has(.dropdownIcon) .input.size-md {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-md));
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-md));
}

.inputWrapper:has(.infoIcon) .input.size-lg {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-lg));
}

.inputWrapper:has(.dropdownIcon) .input.size-lg {
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-lg));
}

.inputWrapper:has(.infoIcon):has(.dropdownIcon) .input.size-lg {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-lg));
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-lg));
}

.inputWrapper:has(.infoIcon) .input.size-xl {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-xl));
}

.inputWrapper:has(.dropdownIcon) .input.size-xl {
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-xl));
}

.inputWrapper:has(.infoIcon):has(.dropdownIcon) .input.size-xl {
  padding-left: calc(var(--spacing-icon) + 24px + var(--spacing-xl));
  padding-right: calc(var(--spacing-icon) + 24px + var(--spacing-xl));
}

// Error state for icons
.error {
  .infoIcon,
  .dropdownIcon {
    color: var(--color-red-6);
  }
}

// Focus state for icons
.input:focus {
  & ~ .infoIcon,
  & ~ .dropdownIcon {
    color: var(--color-blue-6);
  }
}
