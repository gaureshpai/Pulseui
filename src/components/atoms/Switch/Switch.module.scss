@import "../../../styles/_tokens.scss";

.root {
  display: flex;
  align-items: flex-start;
  gap: var(--spacing-md);
  width: 100%;
  font-family: var(--font-family);
}

.root.centerLabel {
  align-items: center;
}

.switchContainer {
  flex-shrink: 0;
  margin-top: var(--spacing-xs); // Align with text baseline
}

.switchLabel {
  display: inline-block;
  cursor: pointer;
  position: relative;
  user-select: none;
}

.switchInput {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  pointer-events: none;
}

.switchTrack {
  position: relative;
  width: calc(var(--spacing-lg) * 2.5);
  height: calc(var(--spacing-lg) * 1.25);
  background-color: var(--color-surface-tertiary);
  border-radius: var(--radius-full);
  transition: var(--motion-transition-normal);
  cursor: pointer;

  &::after {
    content: "";
    position: absolute;
    top: var(--spacing-xs);
    left: var(--spacing-xs);
    width: calc(var(--spacing-lg) * 0.75);
    height: calc(var(--spacing-lg) * 0.75);
    background-color: var(--color-surface);
    border-radius: 50%;
    transition: var(--motion-transition-normal);
    box-shadow: var(--shadow-normal);
  }
}

.switchThumb {
  position: absolute;
  background-color: var(--color-surface);
  border-radius: 50%;
  transition: transform 0.2s ease-in-out;
  box-shadow: var(--shadow-normal);
}

// Size variants
.size-sm {
  .switchTrack {
    width: var(--switch-track-width-sm);
    height: var(--switch-track-height-sm);
    border-radius: calc(var(--switch-track-height-sm) / 2);
  }

  .switchThumb {
    top: var(--switch-thumb-offset-sm);
    left: var(--switch-thumb-offset-sm);
    width: var(--switch-thumb-size-sm);
    height: var(--switch-thumb-size-sm);
  }

  .switchInput:checked + .switchTrack .switchThumb {
    transform: translateX(var(--switch-thumb-translate-sm));
  }
}

.size-md {
  .switchTrack {
    width: var(--switch-track-width-md);
    height: var(--switch-track-height-md);
    border-radius: calc(var(--switch-track-height-md) / 2);
  }

  .switchThumb {
    top: var(--switch-thumb-offset-md);
    left: var(--switch-thumb-offset-md);
    width: var(--switch-thumb-size-md);
    height: var(--switch-thumb-size-md);
  }

  .switchInput:checked + .switchTrack .switchThumb {
    transform: translateX(var(--switch-thumb-translate-md));
  }
}

.size-lg {
  .switchTrack {
    width: var(--switch-track-width-lg);
    height: var(--switch-track-height-lg);
    border-radius: calc(var(--switch-track-height-lg) / 2);
  }

  .switchThumb {
    top: var(--switch-thumb-offset-lg);
    left: var(--switch-thumb-offset-lg);
    width: var(--switch-thumb-size-lg);
    height: var(--switch-thumb-size-lg);
  }

  .switchInput:checked + .switchTrack .switchThumb {
    transform: translateX(var(--switch-thumb-translate-lg));
  }
}

// Checked state
.switchInput:checked + .switchTrack {
  background-color: var(--color-primary);

  &::after {
    transform: translateX(calc(var(--spacing-lg) * 1.25));
  }
}

// Focus state
.switchInput:focus + .switchTrack {
  box-shadow: 0 0 0 var(--border-width-thin) var(--color-border-focus);
}

// Hover state
.switchLabel:hover .switchTrack {
  background-color: var(--color-border-primary);
}

.switchInput:checked + .switchTrack:hover {
  background-color: var(--color-button-primary-hover);
}

// Disabled state
.switchInput:disabled + .switchTrack {
  opacity: var(--opacity-50);
  cursor: not-allowed;
}

.switchInput:disabled + .switchTrack .switchThumb {
  background-color: var(--color-border-primary);
}

.switchInput:disabled:checked + .switchTrack {
  background-color: var(--color-border-secondary);
}

.content {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  flex: 1;
  min-width: 0;
}

.label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary);
  line-height: var(--line-height-sm);
  margin: 0;
  cursor: pointer;
}

.required {
  color: var(--color-error);
  margin-left: var(--spacing-xs);
}

.footer {
  display: flex;
  align-items: flex-start;
  min-height: var(--line-height-xs);
}

.caption {
  font-size: var(--font-size-xs);
  color: var(--color-text-muted);
  line-height: var(--line-height-xs);
  margin: 0;
}

.errorMessage {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-xs);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-bold);
  color: var(--color-error);
  line-height: var(--line-height-xs);
  margin: 0;
  margin-left: 0;
  padding-left: 0;
}

.errorIcon {
  flex-shrink: 0;
  padding: 0 !important;
  margin: 0;
}

// Error state
.root.error {
  .switchTrack {
    background-color: var(--color-error);
  }

  .switchInput:checked + .switchTrack {
    background-color: var(--color-error);
  }
}

// Disabled state
.root.disabled {
  opacity: var(--opacity-75);
  pointer-events: none;

  .label {
    cursor: not-allowed;
  }

  .switchLabel {
    cursor: not-allowed;
  }
}
